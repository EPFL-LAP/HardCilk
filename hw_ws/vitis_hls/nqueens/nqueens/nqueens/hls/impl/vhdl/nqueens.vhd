-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nqueens is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    taskIn_TDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    taskIn_TVALID : IN STD_LOGIC;
    taskIn_TREADY : OUT STD_LOGIC;
    taskOut_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    taskOut_TVALID : OUT STD_LOGIC;
    taskOut_TREADY : IN STD_LOGIC;
    argOut_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    argOut_TVALID : OUT STD_LOGIC;
    argOut_TREADY : IN STD_LOGIC;
    closureIn_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    closureIn_TVALID : IN STD_LOGIC;
    closureIn_TREADY : OUT STD_LOGIC;
    mallocIn_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    mallocIn_TVALID : IN STD_LOGIC;
    mallocIn_TREADY : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of nqueens is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "nqueens_nqueens,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3546,HLS_SYN_LUT=5534,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (58 downto 0) := "00000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (58 downto 0) := "00000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (58 downto 0) := "00000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (58 downto 0) := "00000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (58 downto 0) := "00000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (58 downto 0) := "00000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (58 downto 0) := "00001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (58 downto 0) := "00010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (58 downto 0) := "00100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (58 downto 0) := "01000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (58 downto 0) := "10000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_C4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000100";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv57_1 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mem : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal taskIn_TDATA_blk_n : STD_LOGIC;
    signal argOut_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal closureIn_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln119_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln126_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mallocIn_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln98_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_read_reg_1282 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln66_fu_559_p1 : STD_LOGIC_VECTOR (196 downto 0);
    signal trunc_ln66_reg_1293 : STD_LOGIC_VECTOR (196 downto 0);
    signal task_cont_fu_563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal task_cont_reg_1298 : STD_LOGIC_VECTOR (63 downto 0);
    signal task_a_reg_1304 : STD_LOGIC_VECTOR (63 downto 0);
    signal task_ret_addr_fu_577_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal task_ret_addr_reg_1309 : STD_LOGIC_VECTOR (63 downto 0);
    signal task_n_fu_587_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal task_n_reg_1315 : STD_LOGIC_VECTOR (7 downto 0);
    signal task_n62_cast_reg_1325 : STD_LOGIC_VECTOR (4 downto 0);
    signal task_j_fu_607_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal task_j_reg_1330 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln75_fu_629_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln75_reg_1343 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln75_1_reg_1349 : STD_LOGIC_VECTOR (60 downto 0);
    signal count_reg_1354 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln84_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_reg_1361 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln84_fu_648_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln84_reg_1365 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln105_fu_654_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln105_reg_1384 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_reg_1392 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln105_fu_697_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln105_reg_1397 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln105_1_reg_1403 : STD_LOGIC_VECTOR (60 downto 0);
    signal shl_ln105_fu_731_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln105_reg_1415 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln105_2_fu_748_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln105_2_reg_1420 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_fu_778_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln110_reg_1431 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_3_fu_797_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_reg_1439 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln116_fu_806_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln116_reg_1444 : STD_LOGIC_VECTOR (7 downto 0);
    signal arg_j_fu_816_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal arg_j_reg_1463 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_36_fu_821_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_36_reg_1468 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln119_fu_851_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln119_reg_1478 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln119_1_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln119_1_reg_1483 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_865_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1488 : STD_LOGIC_VECTOR (7 downto 0);
    signal spawn_count_load_1_reg_1494 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln126_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal cont_addr_reg_1503 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln137_fu_879_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln137_reg_1508 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln137_fu_884_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_reg_1516 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_5_reg_1522 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln6_reg_1527 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln157_fu_923_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln157_reg_1532 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln157_1_reg_1537 : STD_LOGIC_VECTOR (60 downto 0);
    signal icmp_ln18_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1542 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal add_ln18_fu_942_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln18_reg_1546 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln18_1_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1556 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_reg_1560 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal add_ln15_fu_973_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal shl_ln137_fu_1004_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_2_fu_1021_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal shl_ln137_2_reg_1579 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln137_1_fu_1042_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_1_reg_1590 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_6_reg_1596 : STD_LOGIC_VECTOR (60 downto 0);
    signal shl_ln137_3_fu_1063_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_3_reg_1601 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_5_fu_1080_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal shl_ln137_5_reg_1606 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln137_2_fu_1100_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_2_reg_1617 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_7_reg_1622 : STD_LOGIC_VECTOR (60 downto 0);
    signal shl_ln137_6_fu_1121_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_6_reg_1627 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln137_3_fu_1142_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_3_reg_1638 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_8_reg_1643 : STD_LOGIC_VECTOR (60 downto 0);
    signal shl_ln137_7_fu_1159_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_7_reg_1648 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln137_4_fu_1180_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_4_reg_1659 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln137_9_reg_1664 : STD_LOGIC_VECTOR (60 downto 0);
    signal shl_ln137_8_fu_1197_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_8_reg_1669 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln157_fu_1226_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln157_reg_1688 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln75_fu_1245_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln75_reg_1699 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln75_2_fu_1262_p2 : STD_LOGIC_VECTOR (56 downto 0);
    signal shl_ln75_2_reg_1704 : STD_LOGIC_VECTOR (56 downto 0);
    signal spawn_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal spawn_ce0 : STD_LOGIC;
    signal spawn_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal bs_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bs_ce0 : STD_LOGIC;
    signal bs_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_bs_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_bs_ce0 : STD_LOGIC;
    signal l_bs_we0 : STD_LOGIC;
    signal l_bs_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_bs_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_a_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal l_a_ce0 : STD_LOGIC;
    signal l_a_we0 : STD_LOGIC;
    signal l_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_done : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_idle : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_ready : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_idle : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_ready : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_ce0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_we0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_done : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_idle : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_ready : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_ce0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_done : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_idle : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_ready : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_ce0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_we0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_ce0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_done : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_idle : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_ready : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_ce0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_done : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_idle : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_ready : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TREADY : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_ce0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_ce0 : STD_LOGIC;
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TVALID : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal i_8_reg_447 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_predicate_op212_call_state22 : BOOLEAN;
    signal ap_block_state22_on_subcall_done : BOOLEAN;
    signal cond_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op186_read_state18 : BOOLEAN;
    signal ap_block_state18 : BOOLEAN;
    signal indvars_iv_i_reg_459 : STD_LOGIC_VECTOR (6 downto 0);
    signal cleanup_dest_slot_3_i_reg_471 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state6_ignore_call5 : BOOLEAN;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln110_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal zext_ln98_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln17_1_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal sext_ln105_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln137_fu_1027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln137_1_fu_1085_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln137_2_fu_1127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln137_3_fu_1165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln137_4_fu_1203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln138_fu_1213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln157_fu_1232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state25_io : BOOLEAN;
    signal zext_ln137_4_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state26_io : BOOLEAN;
    signal zext_ln137_9_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state27_io : BOOLEAN;
    signal ap_block_state28_io : BOOLEAN;
    signal ap_block_state29_io : BOOLEAN;
    signal zext_ln75_2_fu_1278_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i27_013_fu_196 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal i_4_fu_764_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_fu_200 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln98_fu_681_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal i_3_fu_204 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal i_7_fu_787_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal spawn_count_fu_208 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal spawn_count_1_fu_987_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_6_fu_212 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state48 : BOOLEAN;
    signal ap_block_state57 : BOOLEAN;
    signal bs_we0_local : STD_LOGIC;
    signal bs_ce0_local : STD_LOGIC;
    signal l_bs_we0_local : STD_LOGIC;
    signal l_bs_ce0_local : STD_LOGIC;
    signal l_bs_address0_local : STD_LOGIC_VECTOR (7 downto 0);
    signal spawn_we0_local : STD_LOGIC;
    signal spawn_ce0_local : STD_LOGIC;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal add_ln75_fu_623_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal wide_trip_count40_fu_651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln98_1_fu_672_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln105_1_fu_692_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln105_1_fu_728_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln105_1_fu_737_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln105_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln105_2_fu_744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln110_fu_793_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln119_fu_842_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln119_fu_857_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln137_5_fu_898_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln137_6_fu_903_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln157_fu_919_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln17_fu_948_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln17_fu_952_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln123_fu_983_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln137_1_fu_1001_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_1_fu_1010_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln137_fu_998_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln137_2_fu_1017_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln137_1_fu_1037_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_3_fu_1060_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln137_4_fu_1069_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln137_8_fu_1076_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln137_2_fu_1095_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_5_fu_1118_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln137_3_fu_1137_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_6_fu_1156_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln137_4_fu_1175_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln137_7_fu_1194_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln157_fu_1223_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln75_fu_1242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln75_1_fu_1251_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln75_1_fu_1258_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal icmp_ln72_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal regslice_both_taskOut_U_apdone_blk : STD_LOGIC;
    signal regslice_both_argOut_U_apdone_blk : STD_LOGIC;
    signal ap_block_state59 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_block_state40_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal regslice_both_taskIn_U_apdone_blk : STD_LOGIC;
    signal taskIn_TDATA_int_regslice : STD_LOGIC_VECTOR (255 downto 0);
    signal taskIn_TVALID_int_regslice : STD_LOGIC;
    signal taskIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_taskIn_U_ack_in : STD_LOGIC;
    signal taskOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_taskOut_U_vld_out : STD_LOGIC;
    signal argOut_TVALID_int_regslice : STD_LOGIC;
    signal argOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_argOut_U_vld_out : STD_LOGIC;
    signal regslice_both_closureIn_U_apdone_blk : STD_LOGIC;
    signal closureIn_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal closureIn_TVALID_int_regslice : STD_LOGIC;
    signal closureIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_closureIn_U_ack_in : STD_LOGIC;
    signal regslice_both_mallocIn_U_apdone_blk : STD_LOGIC;
    signal mallocIn_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal mallocIn_TVALID_int_regslice : STD_LOGIC;
    signal mallocIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_mallocIn_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component nqueens_nqueens_Pipeline_VITIS_LOOP_84_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        task_n62 : IN STD_LOGIC_VECTOR (7 downto 0);
        mem : IN STD_LOGIC_VECTOR (63 downto 0);
        count : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component nqueens_nqueens_Pipeline_VITIS_LOOP_94_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        task_j63 : IN STD_LOGIC_VECTOR (7 downto 0);
        mem : IN STD_LOGIC_VECTOR (63 downto 0);
        task_a60 : IN STD_LOGIC_VECTOR (63 downto 0);
        l_a_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        l_a_ce0 : OUT STD_LOGIC;
        l_a_we0 : OUT STD_LOGIC;
        l_a_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component nqueens_nqueens_Pipeline_VITIS_LOOP_102_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        task_j63 : IN STD_LOGIC_VECTOR (7 downto 0);
        l_a_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        l_a_ce0 : OUT STD_LOGIC;
        l_a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        mem : IN STD_LOGIC_VECTOR (63 downto 0);
        b : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component nqueens_nqueens_Pipeline_VITIS_LOOP_113_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        task_j63 : IN STD_LOGIC_VECTOR (7 downto 0);
        zext_ln114 : IN STD_LOGIC_VECTOR (7 downto 0);
        l_bs_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        l_bs_ce0 : OUT STD_LOGIC;
        l_bs_we0 : OUT STD_LOGIC;
        l_bs_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        l_a_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        l_a_ce0 : OUT STD_LOGIC;
        l_a_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component nqueens_nqueens_Pipeline_VITIS_LOOP_18_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        indvars_iv_i : IN STD_LOGIC_VECTOR (6 downto 0);
        zext_ln119 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_8 : IN STD_LOGIC_VECTOR (5 downto 0);
        zext_ln18_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        zext_ln17 : IN STD_LOGIC_VECTOR (7 downto 0);
        l_bs_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        l_bs_ce0 : OUT STD_LOGIC;
        l_bs_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component nqueens_nqueens_Pipeline_VITIS_LOOP_142_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        taskOut_TREADY : IN STD_LOGIC;
        task_n62 : IN STD_LOGIC_VECTOR (4 downto 0);
        spawn_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        spawn_ce0 : OUT STD_LOGIC;
        spawn_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        bs_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bs_ce0 : OUT STD_LOGIC;
        bs_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        count : IN STD_LOGIC_VECTOR (63 downto 0);
        empty_21 : IN STD_LOGIC_VECTOR (196 downto 0);
        empty : IN STD_LOGIC_VECTOR (5 downto 0);
        cont_addr : IN STD_LOGIC_VECTOR (63 downto 0);
        taskOut_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        taskOut_TVALID : OUT STD_LOGIC );
    end component;


    component nqueens_spawn_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component nqueens_bs_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component nqueens_l_bs_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component nqueens_l_a_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component nqueens_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        mem : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component nqueens_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component nqueens_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    spawn_U : component nqueens_spawn_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => spawn_address0,
        ce0 => spawn_ce0,
        we0 => spawn_we0_local,
        d0 => cleanup_dest_slot_3_i_reg_471,
        q0 => spawn_q0);

    bs_U : component nqueens_bs_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bs_address0,
        ce0 => bs_ce0,
        we0 => bs_we0_local,
        d0 => mallocIn_TDATA_int_regslice,
        q0 => bs_q0);

    l_bs_U : component nqueens_l_bs_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => l_bs_address0,
        ce0 => l_bs_ce0,
        we0 => l_bs_we0,
        d0 => l_bs_d0,
        q0 => l_bs_q0);

    l_a_U : component nqueens_l_a_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => l_a_address0,
        ce0 => l_a_ce0,
        we0 => l_a_we0,
        d0 => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_d0,
        q0 => l_a_q0);

    grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485 : component nqueens_nqueens_Pipeline_VITIS_LOOP_84_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start,
        ap_done => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_done,
        ap_idle => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_idle,
        ap_ready => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_ready,
        m_axi_gmem_AWVALID => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv64_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        task_n62 => task_n_reg_1315,
        mem => mem_read_reg_1282,
        count => count_reg_1354);

    grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495 : component nqueens_nqueens_Pipeline_VITIS_LOOP_94_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start,
        ap_done => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done,
        ap_idle => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_idle,
        ap_ready => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_ready,
        m_axi_gmem_AWVALID => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        task_j63 => task_j_reg_1330,
        mem => mem_read_reg_1282,
        task_a60 => task_a_reg_1304,
        l_a_address0 => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_address0,
        l_a_ce0 => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_ce0,
        l_a_we0 => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_we0,
        l_a_d0 => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_d0);

    grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505 : component nqueens_nqueens_Pipeline_VITIS_LOOP_102_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start,
        ap_done => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_done,
        ap_idle => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_idle,
        ap_ready => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_ready,
        m_axi_gmem_AWVALID => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv64_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        task_j63 => task_j_reg_1330,
        l_a_address0 => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_address0,
        l_a_ce0 => grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_ce0,
        l_a_q0 => l_a_q0,
        mem => mem_read_reg_1282,
        b => b_reg_1392);

    grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516 : component nqueens_nqueens_Pipeline_VITIS_LOOP_113_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start,
        ap_done => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_done,
        ap_idle => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_idle,
        ap_ready => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_ready,
        task_j63 => task_j_reg_1330,
        zext_ln114 => tmp_3_reg_1439,
        l_bs_address0 => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_address0,
        l_bs_ce0 => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_ce0,
        l_bs_we0 => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_we0,
        l_bs_d0 => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_d0,
        l_a_address0 => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_address0,
        l_a_ce0 => grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_ce0,
        l_a_q0 => l_a_q0);

    grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524 : component nqueens_nqueens_Pipeline_VITIS_LOOP_18_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start,
        ap_done => grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_done,
        ap_idle => grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_idle,
        ap_ready => grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_ready,
        indvars_iv_i => indvars_iv_i_reg_459,
        zext_ln119 => arg_j_reg_1463,
        i_8 => i_8_reg_447,
        zext_ln18_1 => p_reg_1560,
        zext_ln17 => tmp_8_reg_1488,
        l_bs_address0 => grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_address0,
        l_bs_ce0 => grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_ce0,
        l_bs_q0 => l_bs_q0,
        p => p_reg_1560,
        ap_return => grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_return);

    grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537 : component nqueens_nqueens_Pipeline_VITIS_LOOP_142_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start,
        ap_done => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_done,
        ap_idle => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_idle,
        ap_ready => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_ready,
        taskOut_TREADY => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TREADY,
        task_n62 => task_n62_cast_reg_1325,
        spawn_address0 => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_address0,
        spawn_ce0 => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_ce0,
        spawn_q0 => spawn_q0,
        bs_address0 => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_address0,
        bs_ce0 => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_ce0,
        bs_q0 => bs_q0,
        count => count_reg_1354,
        empty_21 => trunc_ln66_reg_1293,
        empty => empty_36_reg_1468,
        cont_addr => cont_addr_reg_1503,
        taskOut_TDATA => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TDATA,
        taskOut_TVALID => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TVALID);

    control_s_axi_U : component nqueens_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        mem => mem);

    gmem_m_axi_U : component nqueens_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 64,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem_ARVALID,
        I_CH0_ARREADY => gmem_ARREADY,
        I_CH0_ARADDR => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARADDR,
        I_CH0_ARLEN => grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARLEN,
        I_CH0_RVALID => gmem_RVALID,
        I_CH0_RREADY => gmem_RREADY,
        I_CH0_RDATA => gmem_RDATA,
        I_CH0_RFIFONUM => gmem_RFIFONUM,
        I_CH0_AWVALID => gmem_AWVALID,
        I_CH0_AWREADY => gmem_AWREADY,
        I_CH0_AWADDR => gmem_AWADDR,
        I_CH0_AWLEN => gmem_AWLEN,
        I_CH0_WVALID => gmem_WVALID,
        I_CH0_WREADY => gmem_WREADY,
        I_CH0_WDATA => gmem_WDATA,
        I_CH0_WSTRB => gmem_WSTRB,
        I_CH0_BVALID => gmem_BVALID,
        I_CH0_BREADY => gmem_BREADY);

    regslice_both_taskIn_U : component nqueens_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => taskIn_TDATA,
        vld_in => taskIn_TVALID,
        ack_in => regslice_both_taskIn_U_ack_in,
        data_out => taskIn_TDATA_int_regslice,
        vld_out => taskIn_TVALID_int_regslice,
        ack_out => taskIn_TREADY_int_regslice,
        apdone_blk => regslice_both_taskIn_U_apdone_blk);

    regslice_both_taskOut_U : component nqueens_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TDATA,
        vld_in => grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TVALID,
        ack_in => taskOut_TREADY_int_regslice,
        data_out => taskOut_TDATA,
        vld_out => regslice_both_taskOut_U_vld_out,
        ack_out => taskOut_TREADY,
        apdone_blk => regslice_both_taskOut_U_apdone_blk);

    regslice_both_argOut_U : component nqueens_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => task_cont_reg_1298,
        vld_in => argOut_TVALID_int_regslice,
        ack_in => argOut_TREADY_int_regslice,
        data_out => argOut_TDATA,
        vld_out => regslice_both_argOut_U_vld_out,
        ack_out => argOut_TREADY,
        apdone_blk => regslice_both_argOut_U_apdone_blk);

    regslice_both_closureIn_U : component nqueens_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => closureIn_TDATA,
        vld_in => closureIn_TVALID,
        ack_in => regslice_both_closureIn_U_ack_in,
        data_out => closureIn_TDATA_int_regslice,
        vld_out => closureIn_TVALID_int_regslice,
        ack_out => closureIn_TREADY_int_regslice,
        apdone_blk => regslice_both_closureIn_U_apdone_blk);

    regslice_both_mallocIn_U : component nqueens_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => mallocIn_TDATA,
        vld_in => mallocIn_TVALID,
        ack_in => regslice_both_mallocIn_U_ack_in,
        data_out => mallocIn_TDATA_int_regslice,
        vld_out => mallocIn_TVALID_int_regslice,
        ack_out => mallocIn_TREADY_int_regslice,
        apdone_blk => regslice_both_mallocIn_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state6_ignore_call5) and (icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_ready = ap_const_logic_1)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln110_fu_782_p2 = ap_const_lv1_0) and (icmp_ln84_reg_1361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_ready = ap_const_logic_1)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_ready = ap_const_logic_1)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_ready = ap_const_logic_1)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mallocIn_TVALID_int_regslice = ap_const_logic_1))) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_ready = ap_const_logic_1)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_ready = ap_const_logic_1)) then 
                    grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cleanup_dest_slot_3_i_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond_fu_967_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (icmp_ln18_1_reg_1556 = ap_const_lv1_1) and (icmp_ln18_reg_1542 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                cleanup_dest_slot_3_i_reg_471 <= ap_const_lv1_0;
            elsif (((icmp_ln18_fu_937_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                cleanup_dest_slot_3_i_reg_471 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i27_013_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done = ap_const_logic_1) and (icmp_ln84_fu_643_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i27_013_fu_196 <= ap_const_lv8_0;
            elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i27_013_fu_196 <= i_4_fu_764_p2;
            end if; 
        end if;
    end process;

    i_2_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done = ap_const_logic_1) and (icmp_ln84_fu_643_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_2_fu_200 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_state6) and (icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_2_fu_200 <= add_ln98_fu_681_p2;
            end if; 
        end if;
    end process;

    i_3_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6) and (icmp_ln98_fu_676_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_3_fu_204 <= ap_const_lv5_0;
            elsif (((icmp_ln110_fu_782_p2 = ap_const_lv1_0) and (icmp_ln84_reg_1361 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i_3_fu_204 <= i_7_fu_787_p2;
            end if; 
        end if;
    end process;

    i_6_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and ((icmp_ln110_fu_782_p2 = ap_const_lv1_1) or (icmp_ln84_reg_1361 = ap_const_lv1_1)))) then 
                i_6_fu_212 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22) and ((icmp_ln18_reg_1542 = ap_const_lv1_0) or ((cond_fu_967_p2 = ap_const_lv1_0) and (icmp_ln18_1_reg_1556 = ap_const_lv1_1))))) then 
                i_6_fu_212 <= add_ln119_reg_1478;
            end if; 
        end if;
    end process;

    i_8_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state18) and (icmp_ln119_fu_846_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i_8_reg_447 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22) and (((icmp_ln18_1_reg_1556 = ap_const_lv1_0) and (icmp_ln18_reg_1542 = ap_const_lv1_1)) or ((cond_fu_967_p2 = ap_const_lv1_1) and (icmp_ln18_reg_1542 = ap_const_lv1_1))))) then 
                i_8_reg_447 <= add_ln18_reg_1546;
            end if; 
        end if;
    end process;

    indvars_iv_i_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state18) and (icmp_ln119_fu_846_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                indvars_iv_i_reg_459 <= ap_const_lv7_1;
            elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22) and (((icmp_ln18_1_reg_1556 = ap_const_lv1_0) and (icmp_ln18_reg_1542 = ap_const_lv1_1)) or ((cond_fu_967_p2 = ap_const_lv1_1) and (icmp_ln18_reg_1542 = ap_const_lv1_1))))) then 
                indvars_iv_i_reg_459 <= add_ln15_fu_973_p2;
            end if; 
        end if;
    end process;

    spawn_count_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and ((icmp_ln110_fu_782_p2 = ap_const_lv1_1) or (icmp_ln84_reg_1361 = ap_const_lv1_1)))) then 
                spawn_count_fu_208 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                spawn_count_fu_208 <= spawn_count_1_fu_987_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln105_reg_1384 <= add_ln105_fu_654_p2;
                icmp_ln84_reg_1361 <= icmp_ln84_fu_643_p2;
                    zext_ln84_reg_1365(7 downto 0) <= zext_ln84_fu_648_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln116_reg_1444 <= add_ln116_fu_806_p2;
                arg_j_reg_1463 <= arg_j_fu_816_p2;
                empty_36_reg_1468 <= empty_36_fu_821_p1;
                    tmp_3_reg_1439(7 downto 4) <= tmp_3_fu_797_p3(7 downto 4);
                    zext_ln110_reg_1431(4 downto 0) <= zext_ln110_fu_778_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                add_ln119_reg_1478 <= add_ln119_fu_851_p2;
                add_ln137_reg_1508 <= add_ln137_fu_879_p2;
                cont_addr_reg_1503 <= closureIn_TDATA_int_regslice;
                icmp_ln126_reg_1499 <= icmp_ln126_fu_873_p2;
                spawn_count_load_1_reg_1494 <= spawn_count_fu_208;
                    tmp_8_reg_1488(7 downto 4) <= tmp_8_fu_865_p3(7 downto 4);
                trunc_ln137_5_reg_1522 <= add_ln137_fu_879_p2(63 downto 3);
                trunc_ln137_reg_1516 <= trunc_ln137_fu_884_p1;
                trunc_ln157_1_reg_1537 <= add_ln157_fu_919_p2(63 downto 3);
                trunc_ln157_reg_1532 <= trunc_ln157_fu_923_p1;
                trunc_ln6_reg_1527 <= add_ln137_6_fu_903_p2(63 downto 3);
                    zext_ln119_1_reg_1483(4 downto 0) <= zext_ln119_1_fu_861_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                add_ln18_reg_1546 <= add_ln18_fu_942_p2;
                icmp_ln18_1_reg_1556 <= icmp_ln18_1_fu_962_p2;
                icmp_ln18_reg_1542 <= icmp_ln18_fu_937_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                b_reg_1392 <= mallocIn_TDATA_int_regslice;
                trunc_ln105_1_reg_1403 <= add_ln105_1_fu_692_p2(63 downto 3);
                trunc_ln105_reg_1397 <= trunc_ln105_fu_697_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                count_reg_1354 <= mallocIn_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                mem_read_reg_1282 <= mem;
                task_a_reg_1304 <= taskIn_TDATA_int_regslice(127 downto 64);
                task_cont_reg_1298 <= task_cont_fu_563_p1;
                task_j_reg_1330 <= taskIn_TDATA_int_regslice(207 downto 200);
                task_n62_cast_reg_1325 <= taskIn_TDATA_int_regslice(196 downto 192);
                task_n_reg_1315 <= taskIn_TDATA_int_regslice(199 downto 192);
                task_ret_addr_reg_1309 <= taskIn_TDATA_int_regslice(191 downto 128);
                trunc_ln66_reg_1293 <= trunc_ln66_fu_559_p1;
                trunc_ln75_1_reg_1349 <= add_ln75_fu_623_p2(63 downto 3);
                trunc_ln75_reg_1343 <= trunc_ln75_fu_629_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                p_reg_1560 <= l_bs_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                shl_ln105_2_reg_1420 <= shl_ln105_2_fu_748_p2;
                shl_ln105_reg_1415 <= shl_ln105_fu_731_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                shl_ln137_2_reg_1579 <= shl_ln137_2_fu_1021_p2;
                shl_ln137_reg_1574 <= shl_ln137_fu_1004_p2;
                trunc_ln137_1_reg_1590 <= trunc_ln137_1_fu_1042_p1;
                trunc_ln137_6_reg_1596 <= add_ln137_1_fu_1037_p2(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                shl_ln137_3_reg_1601 <= shl_ln137_3_fu_1063_p2;
                shl_ln137_5_reg_1606 <= shl_ln137_5_fu_1080_p2;
                trunc_ln137_2_reg_1617 <= trunc_ln137_2_fu_1100_p1;
                trunc_ln137_7_reg_1622 <= add_ln137_2_fu_1095_p2(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                shl_ln137_6_reg_1627 <= shl_ln137_6_fu_1121_p2;
                trunc_ln137_3_reg_1638 <= trunc_ln137_3_fu_1142_p1;
                trunc_ln137_8_reg_1643 <= add_ln137_3_fu_1137_p2(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                shl_ln137_7_reg_1648 <= shl_ln137_7_fu_1159_p2;
                trunc_ln137_4_reg_1659 <= trunc_ln137_4_fu_1180_p1;
                trunc_ln137_9_reg_1664 <= add_ln137_4_fu_1175_p2(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                shl_ln137_8_reg_1669 <= shl_ln137_8_fu_1197_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                shl_ln157_reg_1688 <= shl_ln157_fu_1226_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                shl_ln75_2_reg_1704 <= shl_ln75_2_fu_1262_p2;
                shl_ln75_reg_1699 <= shl_ln75_fu_1245_p2;
            end if;
        end if;
    end process;
    zext_ln84_reg_1365(60 downto 8) <= "00000000000000000000000000000000000000000000000000000";
    zext_ln110_reg_1431(7 downto 5) <= "000";
    tmp_3_reg_1439(3 downto 0) <= "0000";
    zext_ln119_1_reg_1483(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_8_reg_1488(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state56, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state26, ap_CS_fsm_state31, ap_CS_fsm_state27, ap_CS_fsm_state32, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state29, ap_CS_fsm_state34, ap_CS_fsm_state37, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state47, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state18, icmp_ln119_fu_846_p2, icmp_ln126_fu_873_p2, ap_CS_fsm_state2, ap_CS_fsm_state6, icmp_ln98_fu_676_p2, icmp_ln84_fu_643_p2, icmp_ln84_reg_1361, ap_CS_fsm_state5, ap_CS_fsm_state15, icmp_ln18_fu_937_p2, icmp_ln18_reg_1542, ap_CS_fsm_state19, icmp_ln18_1_reg_1556, ap_CS_fsm_state20, ap_CS_fsm_state22, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_done, grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_done, grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_done, gmem_AWREADY, gmem_WREADY, gmem_BVALID, ap_block_state22_on_subcall_done, cond_fu_967_p2, ap_block_state18, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln110_fu_782_p2, ap_CS_fsm_state16, ap_CS_fsm_state40, ap_block_state25_io, ap_block_state26_io, ap_block_state27_io, ap_block_state28_io, ap_block_state29_io, ap_block_state6, ap_block_state1, ap_block_state48, ap_block_state57, ap_CS_fsm_state38, icmp_ln72_fu_617_p2, ap_CS_fsm_state59, ap_block_state59, ap_block_state40_on_subcall_done, argOut_TREADY_int_regslice, mallocIn_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln72_fu_617_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                elsif (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln72_fu_617_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mallocIn_TVALID_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done = ap_const_logic_1) and (icmp_ln84_fu_643_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done = ap_const_logic_1) and (icmp_ln84_fu_643_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6) and (icmp_ln98_fu_676_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((ap_const_boolean_0 = ap_block_state6) and (icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and ((icmp_ln110_fu_782_p2 = ap_const_lv1_1) or (icmp_ln84_reg_1361 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state18 => 
                if (((ap_const_boolean_0 = ap_block_state18) and (icmp_ln126_fu_873_p2 = ap_const_lv1_1) and (icmp_ln119_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                elsif (((ap_const_boolean_0 = ap_block_state18) and (icmp_ln126_fu_873_p2 = ap_const_lv1_0) and (icmp_ln119_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                elsif (((ap_const_boolean_0 = ap_block_state18) and (icmp_ln119_fu_846_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln18_fu_937_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln18_1_reg_1556 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22) and (((icmp_ln18_1_reg_1556 = ap_const_lv1_0) and (icmp_ln18_reg_1542 = ap_const_lv1_1)) or ((cond_fu_967_p2 = ap_const_lv1_1) and (icmp_ln18_reg_1542 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22) and ((icmp_ln18_reg_1542 = ap_const_lv1_0) or ((cond_fu_967_p2 = ap_const_lv1_0) and (icmp_ln18_1_reg_1556 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state24 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((ap_const_boolean_0 = ap_block_state25_io) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_boolean_0 = ap_block_state28_io) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_boolean_0 = ap_block_state29_io) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if ((not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if ((not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if ((not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                if ((not((ap_const_lv1_1 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_boolean_0 = ap_block_state40_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                if (((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                if ((not(((ap_const_boolean_1 = ap_block_state48) or (argOut_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (argOut_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state50 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                if (((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                if ((not(((ap_const_boolean_1 = ap_block_state57) or (argOut_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (argOut_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                if (((ap_const_boolean_0 = ap_block_state59) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln105_1_fu_692_p2 <= std_logic_vector(unsigned(add_ln105_reg_1384) + unsigned(mallocIn_TDATA_int_regslice));
    add_ln105_fu_654_p2 <= std_logic_vector(unsigned(wide_trip_count40_fu_651_p1) + unsigned(mem_read_reg_1282));
    add_ln116_fu_806_p2 <= std_logic_vector(unsigned(tmp_3_fu_797_p3) + unsigned(task_j_reg_1330));
    add_ln119_fu_851_p2 <= std_logic_vector(unsigned(i_6_fu_212) + unsigned(ap_const_lv5_1));
    add_ln137_1_fu_1037_p2 <= std_logic_vector(unsigned(add_ln137_reg_1508) + unsigned(ap_const_lv64_4));
    add_ln137_2_fu_1095_p2 <= std_logic_vector(unsigned(add_ln137_reg_1508) + unsigned(ap_const_lv64_5));
    add_ln137_3_fu_1137_p2 <= std_logic_vector(unsigned(add_ln137_reg_1508) + unsigned(ap_const_lv64_6));
    add_ln137_4_fu_1175_p2 <= std_logic_vector(unsigned(add_ln137_reg_1508) + unsigned(ap_const_lv64_7));
    add_ln137_5_fu_898_p2 <= std_logic_vector(unsigned(mem_read_reg_1282) + unsigned(ap_const_lv64_8));
    add_ln137_6_fu_903_p2 <= std_logic_vector(unsigned(add_ln137_5_fu_898_p2) + unsigned(closureIn_TDATA_int_regslice));
    add_ln137_fu_879_p2 <= std_logic_vector(unsigned(closureIn_TDATA_int_regslice) + unsigned(mem_read_reg_1282));
    add_ln157_fu_919_p2 <= std_logic_vector(unsigned(task_ret_addr_reg_1309) + unsigned(mem_read_reg_1282));
    add_ln15_fu_973_p2 <= std_logic_vector(unsigned(indvars_iv_i_reg_459) + unsigned(ap_const_lv7_1));
    add_ln17_fu_952_p2 <= std_logic_vector(unsigned(tmp_8_reg_1488) + unsigned(zext_ln17_fu_948_p1));
    add_ln18_fu_942_p2 <= std_logic_vector(unsigned(i_8_reg_447) + unsigned(ap_const_lv6_1));
    add_ln75_fu_623_p2 <= std_logic_vector(unsigned(task_ret_addr_fu_577_p4) + unsigned(mem));
    add_ln98_fu_681_p2 <= std_logic_vector(unsigned(i_2_fu_200) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_done)
    begin
        if ((grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(ap_block_state18)
    begin
        if ((ap_const_boolean_1 = ap_block_state18)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(ap_block_state22_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state22_on_subcall_done)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state25_blk_assign_proc : process(ap_block_state25_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state25_io)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state26_blk_assign_proc : process(ap_block_state26_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state26_io)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state27_blk_assign_proc : process(ap_block_state27_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state27_io)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state28_blk_assign_proc : process(ap_block_state28_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state28_io)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state29_blk_assign_proc : process(ap_block_state29_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state29_io)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(mallocIn_TVALID_int_regslice)
    begin
        if ((mallocIn_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state30_blk_assign_proc : process(gmem_WREADY, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state31_blk_assign_proc : process(gmem_WREADY, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state32_blk_assign_proc : process(gmem_WREADY, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state33_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state34_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;

    ap_ST_fsm_state37_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state38_blk <= ap_const_logic_1;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_done)
    begin
        if ((grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state40_blk_assign_proc : process(ap_block_state40_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state40_on_subcall_done)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state41_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state42_blk_assign_proc : process(gmem_WREADY)
    begin
        if ((gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state42_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state42_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;

    ap_ST_fsm_state47_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state47_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state47_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state48_blk_assign_proc : process(ap_block_state48, argOut_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state48) or (argOut_TREADY_int_regslice = ap_const_logic_0))) then 
            ap_ST_fsm_state48_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state48_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state49_blk_assign_proc : process(argOut_TREADY_int_regslice)
    begin
        if ((argOut_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state49_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state49_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state50_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state50_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state50_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state51_blk_assign_proc : process(gmem_WREADY)
    begin
        if ((gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state51_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state51_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;

    ap_ST_fsm_state56_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state56_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state56_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state57_blk_assign_proc : process(ap_block_state57, argOut_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state57) or (argOut_TREADY_int_regslice = ap_const_logic_0))) then 
            ap_ST_fsm_state57_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state57_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state58_blk_assign_proc : process(argOut_TREADY_int_regslice)
    begin
        if ((argOut_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state59_blk_assign_proc : process(ap_block_state59)
    begin
        if ((ap_const_boolean_1 = ap_block_state59)) then 
            ap_ST_fsm_state59_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state59_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done)
    begin
        if ((grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6)
    begin
        if ((ap_const_boolean_1 = ap_block_state6)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_done)
    begin
        if ((grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(gmem_WREADY)
    begin
        if ((gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, taskIn_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (taskIn_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state18_assign_proc : process(ap_predicate_op186_read_state18, closureIn_TVALID_int_regslice)
    begin
                ap_block_state18 <= ((ap_predicate_op186_read_state18 = ap_const_boolean_1) and (closureIn_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state22_on_subcall_done_assign_proc : process(grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_done, ap_predicate_op212_call_state22)
    begin
                ap_block_state22_on_subcall_done <= ((ap_predicate_op212_call_state22 = ap_const_boolean_1) and (grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_done = ap_const_logic_0));
    end process;


    ap_block_state25_io_assign_proc : process(gmem_AWREADY, gmem_WREADY)
    begin
                ap_block_state25_io <= ((gmem_WREADY = ap_const_logic_0) or (gmem_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state26_io_assign_proc : process(gmem_AWREADY, gmem_WREADY)
    begin
                ap_block_state26_io <= ((gmem_WREADY = ap_const_logic_0) or (gmem_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state27_io_assign_proc : process(gmem_AWREADY, gmem_WREADY)
    begin
                ap_block_state27_io <= ((gmem_WREADY = ap_const_logic_0) or (gmem_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state28_io_assign_proc : process(gmem_AWREADY, gmem_WREADY)
    begin
                ap_block_state28_io <= ((gmem_WREADY = ap_const_logic_0) or (gmem_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state29_io_assign_proc : process(gmem_AWREADY, gmem_WREADY)
    begin
                ap_block_state29_io <= ((gmem_WREADY = ap_const_logic_0) or (gmem_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state40_on_subcall_done_assign_proc : process(icmp_ln126_reg_1499, grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_done)
    begin
                ap_block_state40_on_subcall_done <= ((grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_done = ap_const_logic_0) and (icmp_ln126_reg_1499 = ap_const_lv1_0));
    end process;


    ap_block_state48_assign_proc : process(argOut_TREADY_int_regslice)
    begin
                ap_block_state48 <= ((ap_const_lv1_1 = ap_const_lv1_0) or (argOut_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state57_assign_proc : process(argOut_TREADY_int_regslice)
    begin
                ap_block_state57 <= ((ap_const_lv1_1 = ap_const_lv1_0) or (argOut_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state59_assign_proc : process(regslice_both_taskOut_U_apdone_blk, regslice_both_argOut_U_apdone_blk)
    begin
                ap_block_state59 <= ((regslice_both_argOut_U_apdone_blk = ap_const_logic_1) or (regslice_both_taskOut_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_state6_assign_proc : process(icmp_ln98_fu_676_p2, mallocIn_TVALID_int_regslice)
    begin
                ap_block_state6 <= ((icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (mallocIn_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state6_ignore_call5_assign_proc : process(icmp_ln98_fu_676_p2, mallocIn_TVALID_int_regslice)
    begin
                ap_block_state6_ignore_call5 <= ((icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (mallocIn_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state59, ap_block_state59)
    begin
        if (((ap_const_boolean_0 = ap_block_state59) and (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op186_read_state18_assign_proc : process(icmp_ln119_fu_846_p2, icmp_ln126_fu_873_p2)
    begin
                ap_predicate_op186_read_state18 <= ((icmp_ln126_fu_873_p2 = ap_const_lv1_0) and (icmp_ln119_fu_846_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op212_call_state22_assign_proc : process(icmp_ln18_reg_1542, icmp_ln18_1_reg_1556)
    begin
                ap_predicate_op212_call_state22 <= ((icmp_ln18_1_reg_1556 = ap_const_lv1_1) and (icmp_ln18_reg_1542 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state59, ap_block_state59)
    begin
        if (((ap_const_boolean_0 = ap_block_state59) and (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    argOut_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state48, ap_CS_fsm_state49, argOut_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            argOut_TDATA_blk_n <= argOut_TREADY_int_regslice;
        else 
            argOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    argOut_TVALID <= regslice_both_argOut_U_vld_out;

    argOut_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state48, ap_block_state48, ap_block_state57, argOut_TREADY_int_regslice)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state57) or (argOut_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state57)) or (not(((ap_const_boolean_1 = ap_block_state48) or (argOut_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state48)))) then 
            argOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            argOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    arg_j_fu_816_p2 <= std_logic_vector(unsigned(task_j_reg_1330) + unsigned(ap_const_lv8_1));

    bs_address0_assign_proc : process(icmp_ln126_reg_1499, grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_address0, ap_CS_fsm_state40, zext_ln98_fu_687_p1)
    begin
        if (((icmp_ln126_reg_1499 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            bs_address0 <= grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_address0;
        else 
            bs_address0 <= zext_ln98_fu_687_p1(4 - 1 downto 0);
        end if; 
    end process;


    bs_ce0_assign_proc : process(icmp_ln126_reg_1499, grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_ce0, ap_CS_fsm_state40, bs_ce0_local)
    begin
        if (((icmp_ln126_reg_1499 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            bs_ce0 <= grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_bs_ce0;
        else 
            bs_ce0 <= bs_ce0_local;
        end if; 
    end process;


    bs_ce0_local_assign_proc : process(ap_CS_fsm_state6, ap_block_state6)
    begin
        if (((ap_const_boolean_0 = ap_block_state6) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            bs_ce0_local <= ap_const_logic_1;
        else 
            bs_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    bs_we0_local_assign_proc : process(ap_CS_fsm_state6, icmp_ln98_fu_676_p2, ap_block_state6)
    begin
        if (((ap_const_boolean_0 = ap_block_state6) and (icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            bs_we0_local <= ap_const_logic_1;
        else 
            bs_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    closureIn_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state18, icmp_ln119_fu_846_p2, icmp_ln126_fu_873_p2, closureIn_TVALID_int_regslice)
    begin
        if (((icmp_ln126_fu_873_p2 = ap_const_lv1_0) and (icmp_ln119_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            closureIn_TDATA_blk_n <= closureIn_TVALID_int_regslice;
        else 
            closureIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    closureIn_TREADY <= regslice_both_closureIn_U_ack_in;

    closureIn_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state18, ap_predicate_op186_read_state18, ap_block_state18)
    begin
        if (((ap_predicate_op186_read_state18 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state18) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            closureIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            closureIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_967_p2 <= "1" when (grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_return = ap_const_lv2_0) else "0";
    empty_36_fu_821_p1 <= arg_j_fu_816_p2(6 - 1 downto 0);

    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state5, grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARVALID, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_ARVALID <= grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWADDR_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state8, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state41, ap_CS_fsm_state2, ap_CS_fsm_state6, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWADDR, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWADDR, gmem_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state7, sext_ln105_fu_754_p1, sext_ln137_fu_1027_p1, sext_ln137_1_fu_1085_p1, sext_ln137_2_fu_1127_p1, sext_ln137_3_fu_1165_p1, sext_ln137_4_fu_1203_p1, sext_ln138_fu_1213_p1, sext_ln157_fu_1232_p1, sext_ln75_fu_1268_p1, ap_block_state25_io, ap_block_state26_io, ap_block_state27_io, ap_block_state28_io, ap_block_state29_io)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            gmem_AWADDR <= sext_ln75_fu_1268_p1;
        elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            gmem_AWADDR <= sext_ln157_fu_1232_p1;
        elsif (((ap_const_boolean_0 = ap_block_state29_io) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            gmem_AWADDR <= sext_ln138_fu_1213_p1;
        elsif (((ap_const_boolean_0 = ap_block_state28_io) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_AWADDR <= sext_ln137_4_fu_1203_p1;
        elsif (((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_AWADDR <= sext_ln137_3_fu_1165_p1;
        elsif (((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            gmem_AWADDR <= sext_ln137_2_fu_1127_p1;
        elsif (((ap_const_boolean_0 = ap_block_state25_io) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            gmem_AWADDR <= sext_ln137_1_fu_1085_p1;
        elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            gmem_AWADDR <= sext_ln137_fu_1027_p1;
        elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem_AWADDR <= sext_ln105_fu_754_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem_AWADDR <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_AWADDR <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWADDR;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWLEN_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state8, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state41, ap_CS_fsm_state2, ap_CS_fsm_state6, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWLEN, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWLEN, gmem_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_block_state25_io, ap_block_state26_io, ap_block_state27_io, ap_block_state28_io, ap_block_state29_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state29_io) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            gmem_AWLEN <= ap_const_lv64_3(32 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_state28_io) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((ap_const_boolean_0 = ap_block_state25_io) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50)))) then 
            gmem_AWLEN <= ap_const_lv64_1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem_AWLEN <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_AWLEN <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWLEN;
        else 
            gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state8, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state41, ap_CS_fsm_state2, ap_CS_fsm_state6, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWVALID, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWVALID, gmem_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_block_state25_io, ap_block_state26_io, ap_block_state27_io, ap_block_state28_io, ap_block_state29_io)
    begin
        if ((((ap_const_boolean_0 = ap_block_state29_io) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((ap_const_boolean_0 = ap_block_state28_io) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((ap_const_boolean_0 = ap_block_state25_io) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50)))) then 
            gmem_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem_AWVALID <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_AWVALID <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_AWVALID;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state37, ap_CS_fsm_state47, ap_CS_fsm_state2, ap_CS_fsm_state6, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_BREADY, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_BREADY, gmem_WREADY, gmem_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if (((not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32)) or (not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state31)) or (not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
            gmem_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem_BREADY <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_BREADY <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_BREADY;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state5, grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_RREADY, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_RREADY <= grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WDATA_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state26, ap_CS_fsm_state31, ap_CS_fsm_state27, ap_CS_fsm_state32, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state42, ap_CS_fsm_state2, ap_CS_fsm_state6, task_cont_reg_1298, task_ret_addr_reg_1309, count_reg_1354, shl_ln105_2_reg_1420, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WDATA, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WDATA, gmem_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state7, zext_ln137_4_fu_1056_p1, zext_ln137_9_fu_1114_p1, zext_ln75_2_fu_1278_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            gmem_WDATA <= zext_ln75_2_fu_1278_p1;
        elsif (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            gmem_WDATA <= task_ret_addr_reg_1309;
        elsif (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            gmem_WDATA <= count_reg_1354;
        elsif (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            gmem_WDATA <= task_cont_reg_1298;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_WDATA <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            gmem_WDATA <= zext_ln137_9_fu_1114_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            gmem_WDATA <= zext_ln137_4_fu_1056_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            gmem_WDATA <= shl_ln105_2_reg_1420;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem_WDATA <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_WDATA <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WDATA;
        else 
            gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_WSTRB_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state26, ap_CS_fsm_state31, ap_CS_fsm_state27, ap_CS_fsm_state32, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state42, ap_CS_fsm_state2, ap_CS_fsm_state6, shl_ln105_reg_1415, shl_ln137_reg_1574, shl_ln137_3_reg_1601, shl_ln137_6_reg_1627, shl_ln137_7_reg_1648, shl_ln137_8_reg_1669, shl_ln157_reg_1688, shl_ln75_reg_1699, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WSTRB, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WSTRB, gmem_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            gmem_WSTRB <= shl_ln75_reg_1699;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            gmem_WSTRB <= shl_ln157_reg_1688;
        elsif ((((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            gmem_WSTRB <= ap_const_lv8_FF;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            gmem_WSTRB <= shl_ln137_8_reg_1669;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            gmem_WSTRB <= shl_ln137_7_reg_1648;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            gmem_WSTRB <= shl_ln137_6_reg_1627;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            gmem_WSTRB <= shl_ln137_3_reg_1601;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            gmem_WSTRB <= shl_ln137_reg_1574;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            gmem_WSTRB <= shl_ln105_reg_1415;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem_WSTRB <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_WSTRB <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WSTRB;
        else 
            gmem_WSTRB <= "XXXXXXXX";
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state26, ap_CS_fsm_state31, ap_CS_fsm_state27, ap_CS_fsm_state32, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state42, ap_CS_fsm_state2, ap_CS_fsm_state6, grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WVALID, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WVALID, gmem_WREADY, gmem_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_block_state25_io, ap_block_state26_io, ap_block_state27_io, ap_block_state28_io, ap_block_state29_io)
    begin
        if ((((ap_const_boolean_0 = ap_block_state29_io) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((ap_const_boolean_0 = ap_block_state28_io) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((ap_const_boolean_0 = ap_block_state27_io) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_const_boolean_0 = ap_block_state26_io) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((ap_const_boolean_0 = ap_block_state25_io) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32)) or (not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state31)) or (not(((gmem_BVALID = ap_const_logic_0) or (gmem_WREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((gmem_WREADY = ap_const_logic_1) and 
    (ap_const_logic_1 = ap_CS_fsm_state51)))) then 
            gmem_WVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            gmem_WVALID <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_m_axi_gmem_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_WVALID <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_m_axi_gmem_WVALID;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state50, ap_CS_fsm_state8, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state56, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state37, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state51, ap_CS_fsm_state9, ap_CS_fsm_state25, ap_CS_fsm_state30, ap_CS_fsm_state26, ap_CS_fsm_state31, ap_CS_fsm_state27, ap_CS_fsm_state32, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_ap_start_reg;
    grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start <= grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_ap_start_reg;
    grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start <= grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_ap_start_reg;
    grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_taskOut_TREADY <= (taskOut_TREADY_int_regslice and ap_CS_fsm_state40);
    grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start <= grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_ap_start_reg;
    grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start <= grp_nqueens_Pipeline_VITIS_LOOP_84_1_fu_485_ap_start_reg;
    grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start <= grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_ap_start_reg;
    i_4_fu_764_p2 <= std_logic_vector(unsigned(i27_013_fu_196) + unsigned(ap_const_lv8_1));
    i_7_fu_787_p2 <= std_logic_vector(unsigned(i_3_fu_204) + unsigned(ap_const_lv5_1));
    icmp_ln110_fu_782_p2 <= "1" when (zext_ln110_fu_778_p1 = task_n_reg_1315) else "0";
    icmp_ln119_fu_846_p2 <= "1" when (zext_ln119_fu_842_p1 = task_n_reg_1315) else "0";
    icmp_ln126_fu_873_p2 <= "1" when (spawn_count_fu_208 = ap_const_lv5_0) else "0";
    icmp_ln18_1_fu_962_p2 <= "1" when (unsigned(add_ln18_fu_942_p2) < unsigned(empty_36_reg_1468)) else "0";
    icmp_ln18_fu_937_p2 <= "1" when (unsigned(i_8_reg_447) < unsigned(empty_36_reg_1468)) else "0";
    icmp_ln72_fu_617_p2 <= "1" when (task_n_fu_587_p4 = task_j_fu_607_p4) else "0";
    icmp_ln84_fu_643_p2 <= "1" when (task_n_reg_1315 = ap_const_lv8_0) else "0";
    icmp_ln98_fu_676_p2 <= "1" when (zext_ln98_1_fu_672_p1 = task_n_reg_1315) else "0";

    l_a_address0_assign_proc : process(ap_CS_fsm_state5, grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_address0, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_address0, grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_address0, ap_CS_fsm_state7, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            l_a_address0 <= grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            l_a_address0 <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            l_a_address0 <= grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_address0;
        else 
            l_a_address0 <= "XXXX";
        end if; 
    end process;


    l_a_ce0_assign_proc : process(ap_CS_fsm_state5, grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_ce0, grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_ce0, grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_ce0, ap_CS_fsm_state7, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            l_a_ce0 <= grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            l_a_ce0 <= grp_nqueens_Pipeline_VITIS_LOOP_102_4_fu_505_l_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            l_a_ce0 <= grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_ce0;
        else 
            l_a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_a_we0_assign_proc : process(ap_CS_fsm_state5, grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            l_a_we0 <= grp_nqueens_Pipeline_VITIS_LOOP_94_2_fu_495_l_a_we0;
        else 
            l_a_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_bs_address0_assign_proc : process(ap_CS_fsm_state22, grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_address0, grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_address0, ap_predicate_op212_call_state22, ap_CS_fsm_state16, l_bs_address0_local)
    begin
        if (((ap_predicate_op212_call_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            l_bs_address0 <= grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            l_bs_address0 <= grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_address0;
        else 
            l_bs_address0 <= l_bs_address0_local;
        end if; 
    end process;


    l_bs_address0_local_assign_proc : process(ap_CS_fsm_state19, zext_ln116_fu_835_p1, ap_CS_fsm_state17, zext_ln17_1_fu_957_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            l_bs_address0_local <= zext_ln17_1_fu_957_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            l_bs_address0_local <= zext_ln116_fu_835_p1(8 - 1 downto 0);
        else 
            l_bs_address0_local <= "XXXXXXXX";
        end if; 
    end process;


    l_bs_ce0_assign_proc : process(ap_CS_fsm_state22, grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_ce0, grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_ce0, ap_predicate_op212_call_state22, ap_CS_fsm_state16, l_bs_ce0_local)
    begin
        if (((ap_predicate_op212_call_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            l_bs_ce0 <= grp_nqueens_Pipeline_VITIS_LOOP_18_2_fu_524_l_bs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            l_bs_ce0 <= grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_ce0;
        else 
            l_bs_ce0 <= l_bs_ce0_local;
        end if; 
    end process;


    l_bs_ce0_local_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            l_bs_ce0_local <= ap_const_logic_1;
        else 
            l_bs_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    l_bs_d0_assign_proc : process(zext_ln110_reg_1431, grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_d0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            l_bs_d0 <= grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_d0;
        else 
            l_bs_d0 <= zext_ln110_reg_1431;
        end if; 
    end process;


    l_bs_we0_assign_proc : process(grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_we0, ap_CS_fsm_state16, l_bs_we0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            l_bs_we0 <= grp_nqueens_Pipeline_VITIS_LOOP_113_6_fu_516_l_bs_we0;
        else 
            l_bs_we0 <= l_bs_we0_local;
        end if; 
    end process;


    l_bs_we0_local_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            l_bs_we0_local <= ap_const_logic_1;
        else 
            l_bs_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    mallocIn_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, icmp_ln98_fu_676_p2, mallocIn_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            mallocIn_TDATA_blk_n <= mallocIn_TVALID_int_regslice;
        else 
            mallocIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mallocIn_TREADY <= regslice_both_mallocIn_U_ack_in;

    mallocIn_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, icmp_ln98_fu_676_p2, ap_block_state6, mallocIn_TVALID_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mallocIn_TVALID_int_regslice = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_state6) and (icmp_ln98_fu_676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            mallocIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            mallocIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln105_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln105_1_reg_1403),64));

        sext_ln137_1_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln137_6_reg_1596),64));

        sext_ln137_2_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln137_7_reg_1622),64));

        sext_ln137_3_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln137_8_reg_1643),64));

        sext_ln137_4_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln137_9_reg_1664),64));

        sext_ln137_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln137_5_reg_1522),64));

        sext_ln138_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_reg_1527),64));

        sext_ln157_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln157_1_reg_1537),64));

        sext_ln75_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_1_reg_1349),64));

    shl_ln105_1_fu_737_p3 <= (trunc_ln105_reg_1397 & ap_const_lv3_0);
    shl_ln105_2_fu_748_p2 <= std_logic_vector(shift_left(unsigned(zext_ln105_fu_724_p1),to_integer(unsigned('0' & zext_ln105_2_fu_744_p1(31-1 downto 0)))));
    shl_ln105_fu_731_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & zext_ln105_1_fu_728_p1(8-1 downto 0)))));
    shl_ln137_1_fu_1010_p3 <= (trunc_ln137_reg_1516 & ap_const_lv3_0);
    shl_ln137_2_fu_1021_p2 <= std_logic_vector(shift_left(unsigned(zext_ln137_fu_998_p1),to_integer(unsigned('0' & zext_ln137_2_fu_1017_p1(31-1 downto 0)))));
    shl_ln137_3_fu_1063_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & zext_ln137_3_fu_1060_p1(8-1 downto 0)))));
    shl_ln137_4_fu_1069_p3 <= (trunc_ln137_1_reg_1590 & ap_const_lv3_0);
    shl_ln137_5_fu_1080_p2 <= std_logic_vector(shift_left(unsigned(zext_ln84_reg_1365),to_integer(unsigned('0' & zext_ln137_8_fu_1076_p1(31-1 downto 0)))));
    shl_ln137_6_fu_1121_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & zext_ln137_5_fu_1118_p1(8-1 downto 0)))));
    shl_ln137_7_fu_1159_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & zext_ln137_6_fu_1156_p1(8-1 downto 0)))));
    shl_ln137_8_fu_1197_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & zext_ln137_7_fu_1194_p1(8-1 downto 0)))));
    shl_ln137_fu_1004_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_F),to_integer(unsigned('0' & zext_ln137_1_fu_1001_p1(8-1 downto 0)))));
    shl_ln157_fu_1226_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_F),to_integer(unsigned('0' & zext_ln157_fu_1223_p1(8-1 downto 0)))));
    shl_ln75_1_fu_1251_p3 <= (trunc_ln75_reg_1343 & ap_const_lv3_0);
    shl_ln75_2_fu_1262_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv57_1),to_integer(unsigned('0' & zext_ln75_1_fu_1258_p1(31-1 downto 0)))));
    shl_ln75_fu_1245_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_F),to_integer(unsigned('0' & zext_ln75_fu_1242_p1(8-1 downto 0)))));

    spawn_address0_assign_proc : process(zext_ln119_1_reg_1483, icmp_ln126_reg_1499, grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_address0, ap_CS_fsm_state40)
    begin
        if (((icmp_ln126_reg_1499 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            spawn_address0 <= grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_address0;
        else 
            spawn_address0 <= zext_ln119_1_reg_1483(4 - 1 downto 0);
        end if; 
    end process;


    spawn_ce0_assign_proc : process(icmp_ln126_reg_1499, grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_ce0, ap_CS_fsm_state40, spawn_ce0_local)
    begin
        if (((icmp_ln126_reg_1499 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            spawn_ce0 <= grp_nqueens_Pipeline_VITIS_LOOP_142_8_fu_537_spawn_ce0;
        else 
            spawn_ce0 <= spawn_ce0_local;
        end if; 
    end process;


    spawn_ce0_local_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            spawn_ce0_local <= ap_const_logic_1;
        else 
            spawn_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    spawn_count_1_fu_987_p2 <= std_logic_vector(unsigned(zext_ln123_fu_983_p1) + unsigned(spawn_count_fu_208));

    spawn_we0_local_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            spawn_we0_local <= ap_const_logic_1;
        else 
            spawn_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    taskIn_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, taskIn_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            taskIn_TDATA_blk_n <= taskIn_TVALID_int_regslice;
        else 
            taskIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    taskIn_TREADY <= regslice_both_taskIn_U_ack_in;

    taskIn_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            taskIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            taskIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    taskOut_TVALID <= regslice_both_taskOut_U_vld_out;
    task_cont_fu_563_p1 <= taskIn_TDATA_int_regslice(64 - 1 downto 0);
    task_j_fu_607_p4 <= taskIn_TDATA_int_regslice(207 downto 200);
    task_n_fu_587_p4 <= taskIn_TDATA_int_regslice(199 downto 192);
    task_ret_addr_fu_577_p4 <= taskIn_TDATA_int_regslice(191 downto 128);
    tmp_3_fu_797_p3 <= (trunc_ln110_fu_793_p1 & ap_const_lv4_0);
    tmp_8_fu_865_p3 <= (trunc_ln119_fu_857_p1 & ap_const_lv4_0);
    trunc_ln105_fu_697_p1 <= add_ln105_1_fu_692_p2(3 - 1 downto 0);
    trunc_ln110_fu_793_p1 <= i_3_fu_204(4 - 1 downto 0);
    trunc_ln119_fu_857_p1 <= i_6_fu_212(4 - 1 downto 0);
    trunc_ln137_1_fu_1042_p1 <= add_ln137_1_fu_1037_p2(3 - 1 downto 0);
    trunc_ln137_2_fu_1100_p1 <= add_ln137_2_fu_1095_p2(3 - 1 downto 0);
    trunc_ln137_3_fu_1142_p1 <= add_ln137_3_fu_1137_p2(3 - 1 downto 0);
    trunc_ln137_4_fu_1180_p1 <= add_ln137_4_fu_1175_p2(3 - 1 downto 0);
    trunc_ln137_fu_884_p1 <= add_ln137_fu_879_p2(3 - 1 downto 0);
    trunc_ln157_fu_923_p1 <= add_ln157_fu_919_p2(3 - 1 downto 0);
    trunc_ln66_fu_559_p1 <= taskIn_TDATA_int_regslice(197 - 1 downto 0);
    trunc_ln75_fu_629_p1 <= add_ln75_fu_623_p2(3 - 1 downto 0);
    wide_trip_count40_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(task_j_reg_1330),64));
    zext_ln105_1_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln105_reg_1397),8));
    zext_ln105_2_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln105_1_fu_737_p3),64));
    zext_ln105_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i27_013_fu_196),64));
    zext_ln110_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_fu_204),8));
    zext_ln116_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_reg_1444),64));
    zext_ln119_1_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_fu_212),64));
    zext_ln119_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_fu_212),8));
    zext_ln123_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cleanup_dest_slot_3_i_reg_471),5));
    zext_ln137_1_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln137_reg_1516),8));
    zext_ln137_2_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln137_1_fu_1010_p3),61));
    zext_ln137_3_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln137_1_reg_1590),8));
    zext_ln137_4_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln137_2_reg_1579),64));
    zext_ln137_5_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln137_2_reg_1617),8));
    zext_ln137_6_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln137_3_reg_1638),8));
    zext_ln137_7_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln137_4_reg_1659),8));
    zext_ln137_8_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln137_4_fu_1069_p3),61));
    zext_ln137_9_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln137_5_reg_1606),64));
    zext_ln137_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(spawn_count_load_1_reg_1494),61));
    zext_ln157_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln157_reg_1532),8));
    zext_ln17_1_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln17_fu_952_p2),64));
    zext_ln17_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_8_reg_447),8));
    zext_ln75_1_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln75_1_fu_1251_p3),57));
    zext_ln75_2_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln75_2_reg_1704),64));
    zext_ln75_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln75_reg_1343),8));
    zext_ln84_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(task_n_reg_1315),61));
    zext_ln98_1_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_200),8));
    zext_ln98_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_200),64));
end behav;
