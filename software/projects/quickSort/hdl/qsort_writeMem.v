// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module qsort_writeMem (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        compute_to_spawn_next_qsort_task_dout,
        compute_to_spawn_next_qsort_task_empty_n,
        compute_to_spawn_next_qsort_task_read,
        compute_to_spawn_next_sync_task_dout,
        compute_to_spawn_next_sync_task_empty_n,
        compute_to_spawn_next_sync_task_read,
        spawn_next_to_spawn_din,
        spawn_next_to_spawn_full_n,
        spawn_next_to_spawn_write,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        mem
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] compute_to_spawn_next_qsort_task_dout;
input   compute_to_spawn_next_qsort_task_empty_n;
output   compute_to_spawn_next_qsort_task_read;
input  [255:0] compute_to_spawn_next_sync_task_dout;
input   compute_to_spawn_next_sync_task_empty_n;
output   compute_to_spawn_next_sync_task_read;
output  [255:0] spawn_next_to_spawn_din;
input   spawn_next_to_spawn_full_n;
output   spawn_next_to_spawn_write;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] mem;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg compute_to_spawn_next_qsort_task_read;
reg compute_to_spawn_next_sync_task_read;
reg spawn_next_to_spawn_write;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_nbreadreq_fu_46_p3;
reg   [0:0] tmp_reg_72;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_done;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_idle;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_ready;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWVALID;
wire   [63:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWADDR;
wire   [0:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWID;
wire   [31:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWLEN;
wire   [2:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWSIZE;
wire   [1:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWBURST;
wire   [1:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWLOCK;
wire   [3:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWCACHE;
wire   [2:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWPROT;
wire   [3:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWQOS;
wire   [3:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWREGION;
wire   [0:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWUSER;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WVALID;
wire   [63:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WDATA;
wire   [7:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WSTRB;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WLAST;
wire   [0:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WID;
wire   [0:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WUSER;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARVALID;
wire   [63:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARADDR;
wire   [0:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARID;
wire   [31:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARLEN;
wire   [2:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARSIZE;
wire   [1:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARBURST;
wire   [1:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARLOCK;
wire   [3:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARCACHE;
wire   [2:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARPROT;
wire   [3:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARQOS;
wire   [3:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARREGION;
wire   [0:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARUSER;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_RREADY;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_BREADY;
wire   [255:0] grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_spawn_next_to_spawn_din;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_spawn_next_to_spawn_write;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_compute_to_spawn_next_qsort_task_read;
wire    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_compute_to_spawn_next_sync_task_read;
reg    grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    ap_block_state3_on_subcall_done;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start_reg = 1'b0;
end

qsort_writeMem_Pipeline_VITIS_LOOP_99_1 grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start),
    .ap_done(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_done),
    .ap_idle(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_idle),
    .ap_ready(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_ready),
    .m_axi_gmem_AWVALID(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
    .m_axi_gmem_WDATA(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RFIFONUM(m_axi_gmem_RFIFONUM),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
    .m_axi_gmem_BREADY(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(m_axi_gmem_BRESP),
    .m_axi_gmem_BID(m_axi_gmem_BID),
    .m_axi_gmem_BUSER(m_axi_gmem_BUSER),
    .spawn_next_to_spawn_din(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_spawn_next_to_spawn_din),
    .spawn_next_to_spawn_full_n(spawn_next_to_spawn_full_n),
    .spawn_next_to_spawn_write(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_spawn_next_to_spawn_write),
    .compute_to_spawn_next_qsort_task_dout(compute_to_spawn_next_qsort_task_dout),
    .compute_to_spawn_next_qsort_task_empty_n(compute_to_spawn_next_qsort_task_empty_n),
    .compute_to_spawn_next_qsort_task_read(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_compute_to_spawn_next_qsort_task_read),
    .compute_to_spawn_next_sync_task_dout(compute_to_spawn_next_sync_task_dout),
    .compute_to_spawn_next_sync_task_empty_n(compute_to_spawn_next_sync_task_empty_n),
    .compute_to_spawn_next_sync_task_read(grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_compute_to_spawn_next_sync_task_read),
    .mem(mem)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start_reg <= 1'b1;
        end else if ((grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_ready == 1'b1)) begin
            grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_reg_72 <= tmp_nbreadreq_fu_46_p3;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_72 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        compute_to_spawn_next_qsort_task_read = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_compute_to_spawn_next_qsort_task_read;
    end else begin
        compute_to_spawn_next_qsort_task_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_72 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        compute_to_spawn_next_sync_task_read = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_compute_to_spawn_next_sync_task_read;
    end else begin
        compute_to_spawn_next_sync_task_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem_ARVALID = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARVALID;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem_AWVALID = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWVALID;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem_BREADY = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_BREADY;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem_RREADY = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_RREADY;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem_WVALID = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WVALID;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_72 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        spawn_next_to_spawn_write = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_spawn_next_to_spawn_write;
    end else begin
        spawn_next_to_spawn_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_nbreadreq_fu_46_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((tmp_nbreadreq_fu_46_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_done == 1'b0) & (tmp_reg_72 == 1'd1));
end

assign grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_ap_start_reg;

assign m_axi_gmem_ARADDR = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARADDR;

assign m_axi_gmem_ARBURST = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARBURST;

assign m_axi_gmem_ARCACHE = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARCACHE;

assign m_axi_gmem_ARID = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARID;

assign m_axi_gmem_ARLEN = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARLEN;

assign m_axi_gmem_ARLOCK = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARLOCK;

assign m_axi_gmem_ARPROT = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARPROT;

assign m_axi_gmem_ARQOS = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARQOS;

assign m_axi_gmem_ARREGION = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARREGION;

assign m_axi_gmem_ARSIZE = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARSIZE;

assign m_axi_gmem_ARUSER = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_ARUSER;

assign m_axi_gmem_AWADDR = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWADDR;

assign m_axi_gmem_AWBURST = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWBURST;

assign m_axi_gmem_AWCACHE = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWCACHE;

assign m_axi_gmem_AWID = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWID;

assign m_axi_gmem_AWLEN = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWLEN;

assign m_axi_gmem_AWLOCK = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWLOCK;

assign m_axi_gmem_AWPROT = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWPROT;

assign m_axi_gmem_AWQOS = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWQOS;

assign m_axi_gmem_AWREGION = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWREGION;

assign m_axi_gmem_AWSIZE = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWSIZE;

assign m_axi_gmem_AWUSER = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_AWUSER;

assign m_axi_gmem_WDATA = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WDATA;

assign m_axi_gmem_WID = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WID;

assign m_axi_gmem_WLAST = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WLAST;

assign m_axi_gmem_WSTRB = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WSTRB;

assign m_axi_gmem_WUSER = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_m_axi_gmem_WUSER;

assign spawn_next_to_spawn_din = grp_writeMem_Pipeline_VITIS_LOOP_99_1_fu_54_spawn_next_to_spawn_din;

assign tmp_nbreadreq_fu_46_p3 = compute_to_spawn_next_qsort_task_empty_n;

endmodule //qsort_writeMem
