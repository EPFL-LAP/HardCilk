// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="qsort_qsort,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.884500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=5594,HLS_SYN_LUT=6834,HLS_VERSION=2024_1}" *)

module qsort (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        taskIn_TDATA,
        taskIn_TVALID,
        taskIn_TREADY,
        taskOut_TDATA,
        taskOut_TVALID,
        taskOut_TREADY,
        argOut_TDATA,
        argOut_TVALID,
        argOut_TREADY,
        closureIn_TDATA,
        closureIn_TVALID,
        closureIn_TREADY,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input  [255:0] taskIn_TDATA;
input   taskIn_TVALID;
output   taskIn_TREADY;
output  [255:0] taskOut_TDATA;
output   taskOut_TVALID;
input   taskOut_TREADY;
output  [63:0] argOut_TDATA;
output   argOut_TVALID;
input   argOut_TREADY;
input  [63:0] closureIn_TDATA;
input   closureIn_TVALID;
output   closureIn_TREADY;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] mem;
wire   [63:0] memTask;
wire    call_ln151_read_task_fu_142_taskIn_TDATA_blk_n;
reg    taskIn_TDATA_blk_n;
wire    ap_CS_fsm_state2;
reg   [63:0] memTask_read_reg_219;
wire    ap_CS_fsm_state3;
reg   [63:0] mem_read_reg_224;
wire   [0:0] tmp_nbreadreq_fu_128_p3;
reg   [0:0] tmp_reg_229;
wire    ap_CS_fsm_state5;
reg    call_ln151_read_task_fu_142_ap_start;
wire    call_ln151_read_task_fu_142_ap_done;
wire    call_ln151_read_task_fu_142_ap_idle;
wire    call_ln151_read_task_fu_142_ap_ready;
wire    call_ln151_read_task_fu_142_taskIn_TREADY;
wire   [255:0] call_ln151_read_task_fu_142_read_task_to_compute_din;
wire    call_ln151_read_task_fu_142_read_task_to_compute_write;
wire    call_ln151_read_task_fu_142_read_task_to_compute_blk_n;
wire    grp_compute_fu_149_ap_start;
wire    grp_compute_fu_149_ap_done;
wire    grp_compute_fu_149_ap_idle;
wire    grp_compute_fu_149_ap_ready;
wire    grp_compute_fu_149_read_task_to_compute_read;
wire   [127:0] grp_compute_fu_149_compute_to_spawn_next_qsort_task_din;
wire    grp_compute_fu_149_compute_to_spawn_next_qsort_task_write;
wire   [255:0] grp_compute_fu_149_compute_to_spawn_next_sync_task_din;
wire    grp_compute_fu_149_compute_to_spawn_next_sync_task_write;
wire   [63:0] grp_compute_fu_149_compute_to_send_argument_write_addr_din;
wire    grp_compute_fu_149_compute_to_send_argument_write_addr_write;
wire    grp_compute_fu_149_closureIn_TREADY;
wire    grp_compute_fu_149_m_axi_gmem_AWVALID;
wire   [63:0] grp_compute_fu_149_m_axi_gmem_AWADDR;
wire   [0:0] grp_compute_fu_149_m_axi_gmem_AWID;
wire   [31:0] grp_compute_fu_149_m_axi_gmem_AWLEN;
wire   [2:0] grp_compute_fu_149_m_axi_gmem_AWSIZE;
wire   [1:0] grp_compute_fu_149_m_axi_gmem_AWBURST;
wire   [1:0] grp_compute_fu_149_m_axi_gmem_AWLOCK;
wire   [3:0] grp_compute_fu_149_m_axi_gmem_AWCACHE;
wire   [2:0] grp_compute_fu_149_m_axi_gmem_AWPROT;
wire   [3:0] grp_compute_fu_149_m_axi_gmem_AWQOS;
wire   [3:0] grp_compute_fu_149_m_axi_gmem_AWREGION;
wire   [0:0] grp_compute_fu_149_m_axi_gmem_AWUSER;
wire    grp_compute_fu_149_m_axi_gmem_WVALID;
wire   [63:0] grp_compute_fu_149_m_axi_gmem_WDATA;
wire   [7:0] grp_compute_fu_149_m_axi_gmem_WSTRB;
wire    grp_compute_fu_149_m_axi_gmem_WLAST;
wire   [0:0] grp_compute_fu_149_m_axi_gmem_WID;
wire   [0:0] grp_compute_fu_149_m_axi_gmem_WUSER;
wire    grp_compute_fu_149_m_axi_gmem_ARVALID;
wire   [63:0] grp_compute_fu_149_m_axi_gmem_ARADDR;
wire   [0:0] grp_compute_fu_149_m_axi_gmem_ARID;
wire   [31:0] grp_compute_fu_149_m_axi_gmem_ARLEN;
wire   [2:0] grp_compute_fu_149_m_axi_gmem_ARSIZE;
wire   [1:0] grp_compute_fu_149_m_axi_gmem_ARBURST;
wire   [1:0] grp_compute_fu_149_m_axi_gmem_ARLOCK;
wire   [3:0] grp_compute_fu_149_m_axi_gmem_ARCACHE;
wire   [2:0] grp_compute_fu_149_m_axi_gmem_ARPROT;
wire   [3:0] grp_compute_fu_149_m_axi_gmem_ARQOS;
wire   [3:0] grp_compute_fu_149_m_axi_gmem_ARREGION;
wire   [0:0] grp_compute_fu_149_m_axi_gmem_ARUSER;
wire    grp_compute_fu_149_m_axi_gmem_RREADY;
wire    grp_compute_fu_149_m_axi_gmem_BREADY;
wire    grp_writeMem_fu_163_ap_start;
wire    grp_writeMem_fu_163_ap_done;
wire    grp_writeMem_fu_163_ap_idle;
wire    grp_writeMem_fu_163_ap_ready;
wire    grp_writeMem_fu_163_compute_to_spawn_next_qsort_task_read;
wire    grp_writeMem_fu_163_compute_to_spawn_next_sync_task_read;
wire   [255:0] grp_writeMem_fu_163_spawn_next_to_spawn_din;
wire    grp_writeMem_fu_163_spawn_next_to_spawn_write;
wire    grp_writeMem_fu_163_m_axi_gmem_AWVALID;
wire   [63:0] grp_writeMem_fu_163_m_axi_gmem_AWADDR;
wire   [0:0] grp_writeMem_fu_163_m_axi_gmem_AWID;
wire   [31:0] grp_writeMem_fu_163_m_axi_gmem_AWLEN;
wire   [2:0] grp_writeMem_fu_163_m_axi_gmem_AWSIZE;
wire   [1:0] grp_writeMem_fu_163_m_axi_gmem_AWBURST;
wire   [1:0] grp_writeMem_fu_163_m_axi_gmem_AWLOCK;
wire   [3:0] grp_writeMem_fu_163_m_axi_gmem_AWCACHE;
wire   [2:0] grp_writeMem_fu_163_m_axi_gmem_AWPROT;
wire   [3:0] grp_writeMem_fu_163_m_axi_gmem_AWQOS;
wire   [3:0] grp_writeMem_fu_163_m_axi_gmem_AWREGION;
wire   [0:0] grp_writeMem_fu_163_m_axi_gmem_AWUSER;
wire    grp_writeMem_fu_163_m_axi_gmem_WVALID;
wire   [63:0] grp_writeMem_fu_163_m_axi_gmem_WDATA;
wire   [7:0] grp_writeMem_fu_163_m_axi_gmem_WSTRB;
wire    grp_writeMem_fu_163_m_axi_gmem_WLAST;
wire   [0:0] grp_writeMem_fu_163_m_axi_gmem_WID;
wire   [0:0] grp_writeMem_fu_163_m_axi_gmem_WUSER;
wire    grp_writeMem_fu_163_m_axi_gmem_ARVALID;
wire   [63:0] grp_writeMem_fu_163_m_axi_gmem_ARADDR;
wire   [0:0] grp_writeMem_fu_163_m_axi_gmem_ARID;
wire   [31:0] grp_writeMem_fu_163_m_axi_gmem_ARLEN;
wire   [2:0] grp_writeMem_fu_163_m_axi_gmem_ARSIZE;
wire   [1:0] grp_writeMem_fu_163_m_axi_gmem_ARBURST;
wire   [1:0] grp_writeMem_fu_163_m_axi_gmem_ARLOCK;
wire   [3:0] grp_writeMem_fu_163_m_axi_gmem_ARCACHE;
wire   [2:0] grp_writeMem_fu_163_m_axi_gmem_ARPROT;
wire   [3:0] grp_writeMem_fu_163_m_axi_gmem_ARQOS;
wire   [3:0] grp_writeMem_fu_163_m_axi_gmem_ARREGION;
wire   [0:0] grp_writeMem_fu_163_m_axi_gmem_ARUSER;
wire    grp_writeMem_fu_163_m_axi_gmem_RREADY;
wire    grp_writeMem_fu_163_m_axi_gmem_BREADY;
wire    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start;
wire    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_done;
wire    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_idle;
wire    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_ready;
wire    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_compute_to_send_argument_write_addr_read;
wire   [63:0] grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TDATA;
wire    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TVALID;
wire    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TREADY;
wire    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start;
wire    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_done;
wire    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_idle;
wire    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_ready;
wire    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_spawn_next_to_spawn_read;
wire   [255:0] grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TDATA;
wire    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TVALID;
wire    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TREADY;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [63:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [63:0] gmem_WDATA;
reg   [7:0] gmem_WSTRB;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [63:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire    read_task_to_compute_full_n;
reg    read_task_to_compute_write;
reg    grp_compute_fu_149_ap_start_reg;
wire   [255:0] read_task_to_compute_dout;
wire    read_task_to_compute_empty_n;
reg    read_task_to_compute_read;
wire    ap_CS_fsm_state4;
wire    compute_to_spawn_next_qsort_task_full_n;
reg    compute_to_spawn_next_qsort_task_write;
wire    compute_to_spawn_next_sync_task_full_n;
reg    compute_to_spawn_next_sync_task_write;
wire    compute_to_send_argument_write_addr_full_n;
reg    compute_to_send_argument_write_addr_write;
reg    grp_writeMem_fu_163_ap_start_reg;
wire   [127:0] compute_to_spawn_next_qsort_task_dout;
wire    compute_to_spawn_next_qsort_task_empty_n;
reg    compute_to_spawn_next_qsort_task_read;
wire    ap_CS_fsm_state6;
wire   [255:0] compute_to_spawn_next_sync_task_dout;
wire    compute_to_spawn_next_sync_task_empty_n;
reg    compute_to_spawn_next_sync_task_read;
wire    spawn_next_to_spawn_full_n;
reg    spawn_next_to_spawn_write;
reg    grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start_reg;
wire   [63:0] compute_to_send_argument_write_addr_dout;
wire    compute_to_send_argument_write_addr_empty_n;
reg    compute_to_send_argument_write_addr_read;
wire    ap_CS_fsm_state7;
reg    grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start_reg;
wire    ap_CS_fsm_state9;
wire   [255:0] spawn_next_to_spawn_dout;
wire    spawn_next_to_spawn_empty_n;
reg    spawn_next_to_spawn_read;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_7_nbreadreq_fu_135_p3;
wire    ap_CS_fsm_state11;
wire    regslice_both_taskOut_U_apdone_blk;
wire    regslice_both_argOut_U_apdone_blk;
reg    ap_block_state11;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_CS_fsm_state8;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    regslice_both_taskIn_U_apdone_blk;
wire   [255:0] taskIn_TDATA_int_regslice;
wire    taskIn_TVALID_int_regslice;
reg    taskIn_TREADY_int_regslice;
wire    regslice_both_taskIn_U_ack_in;
wire    taskOut_TREADY_int_regslice;
wire    regslice_both_taskOut_U_vld_out;
wire    argOut_TREADY_int_regslice;
wire    regslice_both_argOut_U_vld_out;
wire    regslice_both_closureIn_U_apdone_blk;
wire   [63:0] closureIn_TDATA_int_regslice;
wire    closureIn_TVALID_int_regslice;
reg    closureIn_TREADY_int_regslice;
wire    regslice_both_closureIn_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_compute_fu_149_ap_start_reg = 1'b0;
#0 grp_writeMem_fu_163_ap_start_reg = 1'b0;
#0 grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start_reg = 1'b0;
#0 grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start_reg = 1'b0;
end

qsort_read_task call_ln151_read_task_fu_142(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(call_ln151_read_task_fu_142_ap_start),
    .ap_done(call_ln151_read_task_fu_142_ap_done),
    .ap_idle(call_ln151_read_task_fu_142_ap_idle),
    .ap_ready(call_ln151_read_task_fu_142_ap_ready),
    .taskIn_TDATA(taskIn_TDATA_int_regslice),
    .taskIn_TVALID(taskIn_TVALID_int_regslice),
    .taskIn_TREADY(call_ln151_read_task_fu_142_taskIn_TREADY),
    .read_task_to_compute_din(call_ln151_read_task_fu_142_read_task_to_compute_din),
    .read_task_to_compute_full_n(read_task_to_compute_full_n),
    .read_task_to_compute_write(call_ln151_read_task_fu_142_read_task_to_compute_write),
    .taskIn_TDATA_blk_n(call_ln151_read_task_fu_142_taskIn_TDATA_blk_n),
    .read_task_to_compute_blk_n(call_ln151_read_task_fu_142_read_task_to_compute_blk_n)
);

qsort_compute grp_compute_fu_149(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_compute_fu_149_ap_start),
    .ap_done(grp_compute_fu_149_ap_done),
    .ap_idle(grp_compute_fu_149_ap_idle),
    .ap_ready(grp_compute_fu_149_ap_ready),
    .read_task_to_compute_dout(read_task_to_compute_dout),
    .read_task_to_compute_empty_n(read_task_to_compute_empty_n),
    .read_task_to_compute_read(grp_compute_fu_149_read_task_to_compute_read),
    .compute_to_spawn_next_qsort_task_din(grp_compute_fu_149_compute_to_spawn_next_qsort_task_din),
    .compute_to_spawn_next_qsort_task_full_n(compute_to_spawn_next_qsort_task_full_n),
    .compute_to_spawn_next_qsort_task_write(grp_compute_fu_149_compute_to_spawn_next_qsort_task_write),
    .compute_to_spawn_next_sync_task_din(grp_compute_fu_149_compute_to_spawn_next_sync_task_din),
    .compute_to_spawn_next_sync_task_full_n(compute_to_spawn_next_sync_task_full_n),
    .compute_to_spawn_next_sync_task_write(grp_compute_fu_149_compute_to_spawn_next_sync_task_write),
    .compute_to_send_argument_write_addr_din(grp_compute_fu_149_compute_to_send_argument_write_addr_din),
    .compute_to_send_argument_write_addr_full_n(compute_to_send_argument_write_addr_full_n),
    .compute_to_send_argument_write_addr_write(grp_compute_fu_149_compute_to_send_argument_write_addr_write),
    .closureIn_TDATA(closureIn_TDATA_int_regslice),
    .closureIn_TVALID(closureIn_TVALID_int_regslice),
    .closureIn_TREADY(grp_compute_fu_149_closureIn_TREADY),
    .m_axi_gmem_AWVALID(grp_compute_fu_149_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_compute_fu_149_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_compute_fu_149_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_compute_fu_149_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_compute_fu_149_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_compute_fu_149_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_compute_fu_149_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_compute_fu_149_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_compute_fu_149_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_compute_fu_149_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_compute_fu_149_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_compute_fu_149_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_compute_fu_149_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_compute_fu_149_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_compute_fu_149_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_compute_fu_149_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_compute_fu_149_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_compute_fu_149_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_compute_fu_149_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_compute_fu_149_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_compute_fu_149_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_compute_fu_149_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_compute_fu_149_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_compute_fu_149_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_compute_fu_149_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_compute_fu_149_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_compute_fu_149_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_compute_fu_149_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_compute_fu_149_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_compute_fu_149_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_compute_fu_149_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_compute_fu_149_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .memTask(memTask_read_reg_219)
);

qsort_writeMem grp_writeMem_fu_163(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_writeMem_fu_163_ap_start),
    .ap_done(grp_writeMem_fu_163_ap_done),
    .ap_idle(grp_writeMem_fu_163_ap_idle),
    .ap_ready(grp_writeMem_fu_163_ap_ready),
    .compute_to_spawn_next_qsort_task_dout(compute_to_spawn_next_qsort_task_dout),
    .compute_to_spawn_next_qsort_task_empty_n(compute_to_spawn_next_qsort_task_empty_n),
    .compute_to_spawn_next_qsort_task_read(grp_writeMem_fu_163_compute_to_spawn_next_qsort_task_read),
    .compute_to_spawn_next_sync_task_dout(compute_to_spawn_next_sync_task_dout),
    .compute_to_spawn_next_sync_task_empty_n(compute_to_spawn_next_sync_task_empty_n),
    .compute_to_spawn_next_sync_task_read(grp_writeMem_fu_163_compute_to_spawn_next_sync_task_read),
    .spawn_next_to_spawn_din(grp_writeMem_fu_163_spawn_next_to_spawn_din),
    .spawn_next_to_spawn_full_n(spawn_next_to_spawn_full_n),
    .spawn_next_to_spawn_write(grp_writeMem_fu_163_spawn_next_to_spawn_write),
    .m_axi_gmem_AWVALID(grp_writeMem_fu_163_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_writeMem_fu_163_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_writeMem_fu_163_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_writeMem_fu_163_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_writeMem_fu_163_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_writeMem_fu_163_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_writeMem_fu_163_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_writeMem_fu_163_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_writeMem_fu_163_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_writeMem_fu_163_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_writeMem_fu_163_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_writeMem_fu_163_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_writeMem_fu_163_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_writeMem_fu_163_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_writeMem_fu_163_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_writeMem_fu_163_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_writeMem_fu_163_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_writeMem_fu_163_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_writeMem_fu_163_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_writeMem_fu_163_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_writeMem_fu_163_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_writeMem_fu_163_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_writeMem_fu_163_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_writeMem_fu_163_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_writeMem_fu_163_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_writeMem_fu_163_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_writeMem_fu_163_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_writeMem_fu_163_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_writeMem_fu_163_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_writeMem_fu_163_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_writeMem_fu_163_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_writeMem_fu_163_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .mem(mem_read_reg_224)
);

qsort_qsort_Pipeline_VITIS_LOOP_118_1 grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start),
    .ap_done(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_done),
    .ap_idle(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_idle),
    .ap_ready(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_ready),
    .compute_to_send_argument_write_addr_dout(compute_to_send_argument_write_addr_dout),
    .compute_to_send_argument_write_addr_empty_n(compute_to_send_argument_write_addr_empty_n),
    .compute_to_send_argument_write_addr_read(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_compute_to_send_argument_write_addr_read),
    .argOut_TDATA(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TDATA),
    .argOut_TVALID(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TVALID),
    .argOut_TREADY(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TREADY)
);

qsort_qsort_Pipeline_VITIS_LOOP_86_1 grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start),
    .ap_done(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_done),
    .ap_idle(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_idle),
    .ap_ready(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_ready),
    .spawn_next_to_spawn_dout(spawn_next_to_spawn_dout),
    .spawn_next_to_spawn_empty_n(spawn_next_to_spawn_empty_n),
    .spawn_next_to_spawn_read(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_spawn_next_to_spawn_read),
    .taskOut_TDATA(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TDATA),
    .taskOut_TVALID(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TVALID),
    .taskOut_TREADY(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TREADY)
);

qsort_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .mem(mem),
    .memTask(memTask)
);

qsort_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 64 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(gmem_ARVALID),
    .I_CH0_ARREADY(gmem_ARREADY),
    .I_CH0_ARADDR(gmem_ARADDR),
    .I_CH0_ARLEN(gmem_ARLEN),
    .I_CH0_RVALID(gmem_RVALID),
    .I_CH0_RREADY(gmem_RREADY),
    .I_CH0_RDATA(gmem_RDATA),
    .I_CH0_RFIFONUM(gmem_RFIFONUM),
    .I_CH0_AWVALID(gmem_AWVALID),
    .I_CH0_AWREADY(gmem_AWREADY),
    .I_CH0_AWADDR(gmem_AWADDR),
    .I_CH0_AWLEN(gmem_AWLEN),
    .I_CH0_WVALID(gmem_WVALID),
    .I_CH0_WREADY(gmem_WREADY),
    .I_CH0_WDATA(gmem_WDATA),
    .I_CH0_WSTRB(gmem_WSTRB),
    .I_CH0_BVALID(gmem_BVALID),
    .I_CH0_BREADY(gmem_BREADY)
);

qsort_fifo_w256_d3_S read_task_to_compute_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(call_ln151_read_task_fu_142_read_task_to_compute_din),
    .if_full_n(read_task_to_compute_full_n),
    .if_write(read_task_to_compute_write),
    .if_dout(read_task_to_compute_dout),
    .if_empty_n(read_task_to_compute_empty_n),
    .if_read(read_task_to_compute_read)
);

qsort_fifo_w128_d3_S compute_to_spawn_next_qsort_task_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_compute_fu_149_compute_to_spawn_next_qsort_task_din),
    .if_full_n(compute_to_spawn_next_qsort_task_full_n),
    .if_write(compute_to_spawn_next_qsort_task_write),
    .if_dout(compute_to_spawn_next_qsort_task_dout),
    .if_empty_n(compute_to_spawn_next_qsort_task_empty_n),
    .if_read(compute_to_spawn_next_qsort_task_read)
);

qsort_fifo_w256_d6_A compute_to_spawn_next_sync_task_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_compute_fu_149_compute_to_spawn_next_sync_task_din),
    .if_full_n(compute_to_spawn_next_sync_task_full_n),
    .if_write(compute_to_spawn_next_sync_task_write),
    .if_dout(compute_to_spawn_next_sync_task_dout),
    .if_empty_n(compute_to_spawn_next_sync_task_empty_n),
    .if_read(compute_to_spawn_next_sync_task_read)
);

qsort_fifo_w64_d3_S compute_to_send_argument_write_addr_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_compute_fu_149_compute_to_send_argument_write_addr_din),
    .if_full_n(compute_to_send_argument_write_addr_full_n),
    .if_write(compute_to_send_argument_write_addr_write),
    .if_dout(compute_to_send_argument_write_addr_dout),
    .if_empty_n(compute_to_send_argument_write_addr_empty_n),
    .if_read(compute_to_send_argument_write_addr_read)
);

qsort_fifo_w256_d6_A spawn_next_to_spawn_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_writeMem_fu_163_spawn_next_to_spawn_din),
    .if_full_n(spawn_next_to_spawn_full_n),
    .if_write(spawn_next_to_spawn_write),
    .if_dout(spawn_next_to_spawn_dout),
    .if_empty_n(spawn_next_to_spawn_empty_n),
    .if_read(spawn_next_to_spawn_read)
);

qsort_regslice_both #(
    .DataWidth( 256 ))
regslice_both_taskIn_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(taskIn_TDATA),
    .vld_in(taskIn_TVALID),
    .ack_in(regslice_both_taskIn_U_ack_in),
    .data_out(taskIn_TDATA_int_regslice),
    .vld_out(taskIn_TVALID_int_regslice),
    .ack_out(taskIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_taskIn_U_apdone_blk)
);

qsort_regslice_both #(
    .DataWidth( 256 ))
regslice_both_taskOut_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TDATA),
    .vld_in(grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TVALID),
    .ack_in(taskOut_TREADY_int_regslice),
    .data_out(taskOut_TDATA),
    .vld_out(regslice_both_taskOut_U_vld_out),
    .ack_out(taskOut_TREADY),
    .apdone_blk(regslice_both_taskOut_U_apdone_blk)
);

qsort_regslice_both #(
    .DataWidth( 64 ))
regslice_both_argOut_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TDATA),
    .vld_in(grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TVALID),
    .ack_in(argOut_TREADY_int_regslice),
    .data_out(argOut_TDATA),
    .vld_out(regslice_both_argOut_U_vld_out),
    .ack_out(argOut_TREADY),
    .apdone_blk(regslice_both_argOut_U_apdone_blk)
);

qsort_regslice_both #(
    .DataWidth( 64 ))
regslice_both_closureIn_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(closureIn_TDATA),
    .vld_in(closureIn_TVALID),
    .ack_in(regslice_both_closureIn_U_ack_in),
    .data_out(closureIn_TDATA_int_regslice),
    .vld_out(closureIn_TVALID_int_regslice),
    .ack_out(closureIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_closureIn_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_compute_fu_149_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_compute_fu_149_ap_start_reg <= 1'b1;
        end else if ((grp_compute_fu_149_ap_ready == 1'b1)) begin
            grp_compute_fu_149_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_writeMem_fu_163_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6) & (tmp_reg_229 == 1'd1))) begin
            grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start_reg <= 1'b1;
        end else if ((grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_ready == 1'b1)) begin
            grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start_reg <= 1'b1;
        end else if ((grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_ready == 1'b1)) begin
            grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_writeMem_fu_163_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_writeMem_fu_163_ap_start_reg <= 1'b1;
        end else if ((grp_writeMem_fu_163_ap_ready == 1'b1)) begin
            grp_writeMem_fu_163_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        memTask_read_reg_219 <= memTask;
        mem_read_reg_224 <= mem;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_reg_229 <= tmp_nbreadreq_fu_128_p3;
    end
end

always @ (*) begin
    if ((grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state11)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((call_ln151_read_task_fu_142_taskIn_TDATA_blk_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_compute_fu_149_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_writeMem_fu_163_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        call_ln151_read_task_fu_142_ap_start = 1'b1;
    end else begin
        call_ln151_read_task_fu_142_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        closureIn_TREADY_int_regslice = grp_compute_fu_149_closureIn_TREADY;
    end else begin
        closureIn_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        compute_to_send_argument_write_addr_read = grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_compute_to_send_argument_write_addr_read;
    end else begin
        compute_to_send_argument_write_addr_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        compute_to_send_argument_write_addr_write = grp_compute_fu_149_compute_to_send_argument_write_addr_write;
    end else begin
        compute_to_send_argument_write_addr_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        compute_to_spawn_next_qsort_task_read = grp_writeMem_fu_163_compute_to_spawn_next_qsort_task_read;
    end else begin
        compute_to_spawn_next_qsort_task_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        compute_to_spawn_next_qsort_task_write = grp_compute_fu_149_compute_to_spawn_next_qsort_task_write;
    end else begin
        compute_to_spawn_next_qsort_task_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        compute_to_spawn_next_sync_task_read = grp_writeMem_fu_163_compute_to_spawn_next_sync_task_read;
    end else begin
        compute_to_spawn_next_sync_task_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        compute_to_spawn_next_sync_task_write = grp_compute_fu_149_compute_to_spawn_next_sync_task_write;
    end else begin
        compute_to_spawn_next_sync_task_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARADDR = grp_writeMem_fu_163_m_axi_gmem_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARADDR = grp_compute_fu_149_m_axi_gmem_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARLEN = grp_writeMem_fu_163_m_axi_gmem_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARLEN = grp_compute_fu_149_m_axi_gmem_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_ARVALID = grp_writeMem_fu_163_m_axi_gmem_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARVALID = grp_compute_fu_149_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_AWADDR = grp_writeMem_fu_163_m_axi_gmem_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWADDR = grp_compute_fu_149_m_axi_gmem_AWADDR;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_AWLEN = grp_writeMem_fu_163_m_axi_gmem_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWLEN = grp_compute_fu_149_m_axi_gmem_AWLEN;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_AWVALID = grp_writeMem_fu_163_m_axi_gmem_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_AWVALID = grp_compute_fu_149_m_axi_gmem_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_BREADY = grp_writeMem_fu_163_m_axi_gmem_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_BREADY = grp_compute_fu_149_m_axi_gmem_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_RREADY = grp_writeMem_fu_163_m_axi_gmem_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_RREADY = grp_compute_fu_149_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_WDATA = grp_writeMem_fu_163_m_axi_gmem_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_WDATA = grp_compute_fu_149_m_axi_gmem_WDATA;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_WSTRB = grp_writeMem_fu_163_m_axi_gmem_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_WSTRB = grp_compute_fu_149_m_axi_gmem_WSTRB;
    end else begin
        gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        gmem_WVALID = grp_writeMem_fu_163_m_axi_gmem_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_WVALID = grp_compute_fu_149_m_axi_gmem_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        read_task_to_compute_read = grp_compute_fu_149_read_task_to_compute_read;
    end else begin
        read_task_to_compute_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        read_task_to_compute_write = call_ln151_read_task_fu_142_read_task_to_compute_write;
    end else begin
        read_task_to_compute_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        spawn_next_to_spawn_read = grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_spawn_next_to_spawn_read;
    end else begin
        spawn_next_to_spawn_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        spawn_next_to_spawn_write = grp_writeMem_fu_163_spawn_next_to_spawn_write;
    end else begin
        spawn_next_to_spawn_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        taskIn_TDATA_blk_n = call_ln151_read_task_fu_142_taskIn_TDATA_blk_n;
    end else begin
        taskIn_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        taskIn_TREADY_int_regslice = call_ln151_read_task_fu_142_taskIn_TREADY;
    end else begin
        taskIn_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((call_ln151_read_task_fu_142_taskIn_TDATA_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_compute_fu_149_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_writeMem_fu_163_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6) & (tmp_reg_229 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((grp_writeMem_fu_163_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6) & (tmp_reg_229 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_7_nbreadreq_fu_135_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state11 = ((regslice_both_argOut_U_apdone_blk == 1'b1) | (regslice_both_taskOut_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign argOut_TVALID = regslice_both_argOut_U_vld_out;

assign closureIn_TREADY = regslice_both_closureIn_U_ack_in;

assign grp_compute_fu_149_ap_start = grp_compute_fu_149_ap_start_reg;

assign grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start = grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_ap_start_reg;

assign grp_qsort_Pipeline_VITIS_LOOP_118_1_fu_173_argOut_TREADY = (argOut_TREADY_int_regslice & ap_CS_fsm_state7);

assign grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start = grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_ap_start_reg;

assign grp_qsort_Pipeline_VITIS_LOOP_86_1_fu_180_taskOut_TREADY = (taskOut_TREADY_int_regslice & ap_CS_fsm_state10);

assign grp_writeMem_fu_163_ap_start = grp_writeMem_fu_163_ap_start_reg;

assign taskIn_TREADY = regslice_both_taskIn_U_ack_in;

assign taskOut_TVALID = regslice_both_taskOut_U_vld_out;

assign tmp_7_nbreadreq_fu_135_p3 = spawn_next_to_spawn_empty_n;

assign tmp_nbreadreq_fu_128_p3 = compute_to_send_argument_write_addr_empty_n;


reg find_kernel_block = 0;
// synthesis translate_off
`include "qsort_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //qsort

